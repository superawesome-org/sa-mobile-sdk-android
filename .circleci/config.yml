version: 2.1

references:
  android_config: &android_config
    docker:
      - image: cimg/android:2022.12
    resource_class: medium
    environment:
      FL_OUTPUT_DIR: output
      TERM: dumb
      JAVA_TOOL_OPTIONS: "-Xmx2048m"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"

  configure_google_services: &configure_google_services
    run:
      name: Configure Google Services
      command: |
        echo "Google Services"
        echo 'export SA_ANDROID_SDKS_GOOGLE_SERVICES_JSON_ENC="$SA_ANDROID_SDKS_GOOGLE_SERVICES_JSON_ENC"' >> $BASH_ENV
        echo $SA_ANDROID_SDKS_GOOGLE_SERVICES_JSON_ENC | base64 -di > $PWD/app/${SA_ANDROID_SDKS_GOOGLE_SERVICES_JSON_NAME}.json

  generate_github_token: &generate_github_token
    run:
      name: Generate & store Github Token
      command: |
        curl -L https://github.com/SuperAwesomeLTD/gha-token-generator/releases/download/v1.0.3/gha-token-generator_1.0.3_Linux_x86_64.tar.gz | tar xz
        GENERATED_APP_TOKEN=$( ./gha-token-generator -app-id ${SA_RELEASE_BOT_GITHUB_APP_ID} -org-name SuperAwesomeLTD -pem-key ${SA_RELEASE_BOT_GITHUB_PEM} )
        echo "export GITHUB_TOKEN=${GENERATED_APP_TOKEN}" >> $BASH_ENV
        echo "export GIT_COMMITTER_NAME=sa-release-bot" >> $BASH_ENV
        echo "export GIT_COMMITTER_EMAIL=sa-release-bot@superawesome.tv" >> $BASH_ENV
        echo "export GIT_AUTHOR_NAME=sa-release-bot" >> $BASH_ENV
        echo "export GIT_AUTHOR_EMAIL=sa-release-bot@superawesome.tv" >> $BASH_ENV
        source "$BASH_ENV"

    # clone some scripts
  clone_scripts_repo: &clone_scripts_repo
    run:
      name: Clone scripts repo
      command: |
        git clone https://x-access-token:${GITHUB_TOKEN}@github.com/SuperAwesomeLTD/sa-continuous-integration.git "${SA_PATH_TO_CONTINUOUS_INTEGRATION_REPO}"

  bootstrap_android: &bootstrap_android
    run:
      name: Bootstrap
      command: |
        ${SA_PATH_TO_CONTINUOUS_INTEGRATION_REPO}/bootstrap/bootstrap-mobile-android-sdk.sh

orbs:
  android: circleci/android@2.1.2

jobs:

  checkout_code:
    <<: *android_config
    steps:
      - checkout
      - persist_to_workspace:
          root: "."
          paths:
            - "."

  ## Run unit tests
  lint:
    <<: *android_config
    steps:
      - attach_workspace:
          at: .
      - *generate_github_token
      - *configure_google_services
      - *clone_scripts_repo
      - *bootstrap_android
      - run:
          name: Lint Code
          command: ./gradlew lint

  ## Run unit tests
  test_superawesome_base_unit_tests:
    <<: *android_config
    steps:
      - attach_workspace:
          at: .
      - *generate_github_token
      - *configure_google_services
      - *clone_scripts_repo
      - *bootstrap_android
      - run:
          name: Run unit tests for superawesome_base
          command: bundle exec fastlane run_all_tests module:superawesome-base
      - run:
          name: Copy test results to temp folder
          command: find $PWD/superawesome-base/build/test-results/testDebugUnitTest -name '*.xml' -exec cp {} ${PWD}/temp_files/test-results/debug \;
      - store_test_results:
          path: temp_files/test-results

  ## Run unit tests
  test_superawesome_base_ui_tests:
    executor:
      name: android/android-machine
      tag: 2022.12.1
      resource-class: large
    steps:
      - checkout
      - *generate_github_token
      - *configure_google_services
      - *clone_scripts_repo
      - *bootstrap_android
      - android/accept-licenses
      - android/start-emulator-and-run-tests:
          system-image: system-images;android-30;default;x86_64
          memory: 4096
          post-emulator-launch-assemble-command: ./gradlew app:assembleDebugAndroidTest
          pre-run-tests-steps:
            - run:
                name: Start recording
                command: |
                  adb shell screenrecord --time-limit=170 /sdcard/video.mp4 &
          test-command: ./gradlew app:connectedDebugAndroidTest
          run-logcat: true
      - run:
          name: Download video
          when: always
          command: |
            adb pull /sdcard/video.mp4
            adb shell rm /sdcard/video.mp4
      - run:
          name: Copy test results to temp folder
          command: find $PWD/app/build/outputs/androidTest-results/connected -name '*.xml' -exec cp {} ${PWD}/temp_files/test-results/debug \;
      - store_test_results:
          path: temp_files/test-results
      - store_artifacts:
          path: "./video.mp4"
          destination: videos

  semantic_release_dry_run:
    <<: *android_config
    environment:
      SA_SEMANTIC_RELEASE_RUN_BRANCH: develop
    steps:
      - attach_workspace:
          at: .
      - *generate_github_token
      - *clone_scripts_repo
      - run:
          name: Check semantic release version
          command: |
            ${SA_PATH_TO_CONTINUOUS_INTEGRATION_REPO}/mobile/semantic-release/semantic-release.sh --dry-run
      - persist_to_workspace:
          root: "."
          paths:
          - "nextRelease"

  auto_update_release_version:
    <<: *android_config
    environment:
      SA_SEMANTIC_RELEASE_RUN_BRANCH: develop
    steps:
      - attach_workspace:
          at: .
      - checkout
      - *generate_github_token
      - run:
          name: Auto update release version
          command: |
            NEXT_RELEASE_NUMBER=`cat nextRelease`
            VERSION_PROPERTIES=superawesome-base/src/main/resources/version.properties

            if [[ ( ! -z "$NEXT_RELEASE_NUMBER" ) && ( -f "$VERSION_PROPERTIES" ) ]]; then

              echo "****** Current release version ******"
              cat $VERSION_PROPERTIES

              echo "version.name=$NEXT_RELEASE_NUMBER" > $VERSION_PROPERTIES

              echo "****** Updated release version ******"
              cat $VERSION_PROPERTIES

              git add $VERSION_PROPERTIES
              git commit -m "Auto incremented version to $NEXT_RELEASE_NUMBER via Circle CI [skip ci]"
              git push -q origin develop
            else
              echo "Next release version number not found, no new version to release."
              exit 1
            fi

  semantic_release:
    <<: *android_config
    environment:
      SA_SEMANTIC_RELEASE_RUN_BRANCH: develop
    steps:
      - attach_workspace:
          at: .
      - checkout
      - *generate_github_token
      - *clone_scripts_repo
      - run:
          name: Run semantic release
          command: |
            ${SA_PATH_TO_CONTINUOUS_INTEGRATION_REPO}/mobile/semantic-release/semantic-release.sh

  ## Run sdk push
  sdk_push_superawesome:
    <<: *android_config
    steps:
      - attach_workspace:
          at: .
      - *configure_google_services
      - *generate_github_token
      - *clone_scripts_repo
      - *bootstrap_android
      - run:
          name: Push Superawesome-All to the S3 Repo
          command: bundle exec fastlane sdk_push isMultiplatform:false isPrivateRepo:false modulePkgIdentifier:tv.superawesome.sdk.publisher moduleRelease:superawesome modulePkgName:SuperAwesome

  sdk_push_superawesome_base:
    <<: *android_config
    steps:
      - attach_workspace:
          at: .
      - *configure_google_services
      - *generate_github_token
      - *clone_scripts_repo
      - *bootstrap_android
      - run:
          name: Push Superawesome-Base to the S3 Repo
          command: bundle exec fastlane sdk_push isMultiplatform:false isPrivateRepo:false modulePkgIdentifier:tv.superawesome.sdk.publisher moduleRelease:superawesome-base modulePkgName:SuperAwesome-Base

  sdk_push_superawesome_admob:
    <<: *android_config
    steps:
      - attach_workspace:
          at: .
      - *configure_google_services
      - *generate_github_token
      - *clone_scripts_repo
      - *bootstrap_android
      - run:
          name: Push Superawesome-AdMob to the S3 Repo
          command: bundle exec fastlane sdk_push isMultiplatform:false isPrivateRepo:false modulePkgIdentifier:tv.superawesome.sdk.publisher moduleRelease:saadmob modulePkgName:SuperAwesome-AdMob

  sdk_push_superawesome_unity:
    <<: *android_config
    steps:
      - attach_workspace:
          at: .
      - *configure_google_services
      - *generate_github_token
      - *clone_scripts_repo
      - *bootstrap_android
      - run:
          name: Push Superawesome-Unity to the S3 Repo
          command: bundle exec fastlane sdk_push isMultiplatform:false isPrivateRepo:false modulePkgIdentifier:tv.superawesome.sdk.publisher moduleRelease:saunity modulePkgName:SuperAwesome-Unity

  publish_docs:
    docker:
      - image: circleci/ruby:2.4.1
    working_directory: ~/repo
    environment:
      - JEKYLL_ENV: production
      - NOKOGIRI_USE_SYSTEM_LIBRARIES: true
      - BUNDLE_PATH: ~/repo/docs/vendor/bundle
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
          - rubygems-v1
      - run:
          name: Bundle Install
          command: |
              cd ~/repo/docs
              bundle check || bundle install
      - save_cache:
          key: rubygems-v1
          paths:
            - vendor/bundle
      - run:
          name: Publish Superawesome SDK to the website
          command: |
            cp ~/repo/docs/.circleci/circle_urls.sh ~/repo/docs/circle_urls.sh
            cd ~/repo/docs
            chmod u+x circle_urls.sh
            bash circle_urls.sh
            bundle exec jekyll build
            zip -r _site _site/
      - store_artifacts:
          path: ~/repo/docs/_site.zip
          destination: docsy-jekyll

workflows:
  nightly:
    triggers:
      - schedule:
          cron: "0 7 * * 1-5"
          filters:
            branches:
              only:
                - develop
    jobs:
      - checkout_code:
          context: MOBILE_ANDROID_SDKS
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only: develop

      - test_superawesome_base_ui_tests:
          context: MOBILE_ANDROID_SDKS
          requires:
            - checkout_code
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only: develop

  pull_request:
    jobs:
      - checkout_code:
          context: MOBILE_ANDROID_SDKS
          filters:
            branches:
              ignore: develop
            tags:
              ignore: /^v.*/

      - lint:
          context: MOBILE_ANDROID_SDKS
          requires:
            - checkout_code
          filters:
            branches:
              ignore: develop
            tags:
              ignore: /^v.*/

      - test_superawesome_base_unit_tests:
          context: MOBILE_ANDROID_SDKS
          requires:
            - checkout_code
          filters:
            branches:
              ignore: develop
            tags:
              ignore: /^v.*/

      - test_superawesome_base_ui_tests:
          context: MOBILE_ANDROID_SDKS
          requires:
            - checkout_code
          filters:
            branches:
              ignore: develop
            tags:
              ignore: /^v.*/

  develop:
    jobs:
      - checkout_code:
          context: MOBILE_ANDROID_SDKS
          filters:
            branches:
              only: develop
            tags:
              ignore: /^v.*/

      - test_superawesome_base_unit_tests:
          context: MOBILE_ANDROID_SDKS
          requires:
            - checkout_code
          filters:
            branches:
              only: develop
            tags:
              ignore: /^v.*/

      - semantic_release_dry_run:
          context: MOBILE_ANDROID_SDKS
          requires:
            - test_superawesome_base_unit_tests
          filters:
            branches:
              only: develop
            tags:
              ignore: /^v.*/

      - approve_dry_run_and_release:
          type: approval
          requires:
            - semantic_release_dry_run
          filters:
            branches:
              only: develop
            tags:
              ignore: /^v.*/

      - auto_update_release_version:
          context: MOBILE_ANDROID_SDKS
          requires:
            - approve_dry_run_and_release
          filters:
            branches:
              only: develop
            tags:
              ignore: /^v.*/

      - semantic_release:
          context: MOBILE_ANDROID_SDKS
          requires:
            - auto_update_release_version
          filters:
            branches:
              only: develop
            tags:
              ignore: /^v.*/

  release:
    jobs:
      - checkout_code:
          context: MOBILE_ANDROID_SDKS
          filters:
            branches:
              only: /^v.*/
            tags:
              ignore: /.*/

      - sdk_push_superawesome:
          context: MOBILE_ANDROID_SDKS
          requires:
            - checkout_code
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

      - sdk_push_superawesome_base:
          context: MOBILE_ANDROID_SDKS
          requires:
            - checkout_code
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

      - sdk_push_superawesome_admob:
          context: MOBILE_ANDROID_SDKS
          requires:
            - checkout_code
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

      - sdk_push_superawesome_unity:
          context: MOBILE_ANDROID_SDKS
          requires:
            - checkout_code
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

      - publish_docs:
          context: MOBILE_ANDROID_SDKS
          requires:
            - sdk_push_superawesome
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

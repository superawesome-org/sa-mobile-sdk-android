apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

version = properties.getProperty("project.version")
group = properties.getProperty("project.group")

def siteUrl = 'https://developers.superawesome.tv/extdocs/sa-mobile-sdk-android/html/index.html'
def gitUrl = 'https://github.com/SuperAwesomeLTD/sa-mobile-sdk-android/tree/master'

ext {
    // Will be set in each module
    publishName = ''
    publishDescription = ''

    PROJECT_VERSION = version
    PROJECT_GROUP = group
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            pom.withXml {
                asNode().with {
                    getAt('packaging')[0].replaceNode { packaging('aar') }
                    appendNode('name', this.publishDescription)
                    appendNode('url', siteUrl)

                    appendNode('licenses').with {
                        appendNode('license').with {
                            appendNode('name', 'The Apache Software License, Version 2.0')
                            appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
                        }
                    }

                    appendNode('developers').with {
                        appendNode('developer').with {
                            appendNode('id', 'gabrielcoman')
                            appendNode('name', 'Gabriel Coman')
                            appendNode('email', 'gabriel.coman@superawesome.tv')
                        }
                    }

                    appendNode('scm').with {
                        appendNode('connection', gitUrl)
                        appendNode('developerConnection', gitUrl)
                        appendNode('url', siteUrl)
                    }
                }

                def dependenciesNode = asNode().getAt('dependencies')[0] ?: asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.each {
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                        dependencyNode.appendNode('scope', 'compile')
                    }
                }
            }
        }
    }
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    publications = ['MyPublication']

    pkg {
        repo = "SuperAwesomeSDK"
        name = this.publishName
        userOrg = 'superawesome'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}
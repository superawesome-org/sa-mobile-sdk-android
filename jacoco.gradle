apply plugin: 'jacoco'

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Jacoco test report
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

jacoco {
    toolVersion = jacocoVersion
    reportsDirectory = file("$buildDir/reports")
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
    group = "Reporting"

    reports {
        xml.enabled(true)
        html.enabled(true)
    }

    def excludes = [
            '**/R.class',
            '**/R$*.class',
            '**/*$ViewInjector*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            'android/**/*.*',
            '**/*Fragment.*',
            '**/*Activity.*'
    ]
    def intermediateExcludes = fileTree(dir: "$buildDir/intermediates/classes/debug", excludes: excludes)
    def kotlinExcludes = fileTree(dir: "$buildDir/tmp/kotlin-classes/debug", excludes: excludes)

    getClassDirectories().setFrom(intermediateExcludes + kotlinExcludes)
    getSourceDirectories().setFrom(files([android.sourceSets.main.java.srcDirs, "src/main/java"]))
    getExecutionData().setFrom(files("$buildDir/jacoco/testDebugUnitTest.exec"))
}
